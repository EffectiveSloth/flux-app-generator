on:
  push:
    branches:
      - main

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.SLOTH_PAT }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
      
      # Build and release binary if a release was created
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}
      
      - uses: actions/setup-go@v5
        if: ${{ steps.release.outputs.release_created }}
        with:
          go-version: '1.24'
      
      - name: Create dist directory
        if: ${{ steps.release.outputs.release_created }}
        run: mkdir -p dist

      - name: Build Linux AMD64
        if: ${{ steps.release.outputs.release_created }}
        env:
          GOOS: linux
          GOARCH: amd64
        run: go build -o dist/flux-app-generator-linux-amd64 ./cmd/flux-app-generator

      - name: Build Linux ARM64
        if: ${{ steps.release.outputs.release_created }}
        env:
          GOOS: linux
          GOARCH: arm64
        run: go build -o dist/flux-app-generator-linux-arm64 ./cmd/flux-app-generator

      - name: Build macOS AMD64
        if: ${{ steps.release.outputs.release_created }}
        env:
          GOOS: darwin
          GOARCH: amd64
        run: go build -o dist/flux-app-generator-darwin-amd64 ./cmd/flux-app-generator

      - name: Build macOS ARM64
        if: ${{ steps.release.outputs.release_created }}
        env:
          GOOS: darwin
          GOARCH: arm64
        run: go build -o dist/flux-app-generator-darwin-arm64 ./cmd/flux-app-generator

      - name: Build Windows AMD64
        if: ${{ steps.release.outputs.release_created }}
        env:
          GOOS: windows
          GOARCH: amd64
        run: go build -o dist/flux-app-generator-windows-amd64.exe ./cmd/flux-app-generator

      - name: Create checksums
        if: ${{ steps.release.outputs.release_created }}
        run: |
          cd dist
          sha256sum * > checksums.txt

      - name: Upload Release Assets
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.SLOTH_PAT }}
        run: |
          gh release upload ${{ steps.release.outputs.tag_name }} dist/* 
